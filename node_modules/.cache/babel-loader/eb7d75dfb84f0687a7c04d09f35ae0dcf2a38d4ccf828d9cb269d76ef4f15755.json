{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfulLoginBusiness(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"business\");\n    console.log(\"Successful login\");\n  }\n  registerSuccessfulLoginUser(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"user\");\n    console.log(\"Successful login\");\n  }\n  logout() {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.reload(false);\n  }\n  isUserLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"user\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  isBusinessLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"business\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  getLoggedInUser() {\n    let username = sessionStorage.getItem(\"authenticatedUser\");\n    if (username == null) {\n      return \"\";\n    } else {\n      return username;\n    }\n  }\n  setUpToken(jwtToken) {\n    localStorage.setItem(\"token\", jwtToken);\n  }\n}\nexport default new AuthenticationService();","map":{"version":3,"names":["AuthenticationService","registerSuccessfulLoginBusiness","username","sessionStorage","setItem","console","log","registerSuccessfulLoginUser","logout","localStorage","clear","window","location","reload","isUserLoggedIn","role","getItem","isBusinessLoggedIn","getLoggedInUser","setUpToken","jwtToken"],"sources":["C:/Users/HAI/OneDrive/Documents/Frontend/src/api/authentication/AuthenticationService.js"],"sourcesContent":["class AuthenticationService {\n  registerSuccessfulLoginBusiness(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"business\");\n    console.log(\"Successful login\");\n  }\n\n  registerSuccessfulLoginUser(username) {\n    sessionStorage.setItem(\"authenticatedUser\", username);\n    sessionStorage.setItem(\"role\", \"user\");\n    console.log(\"Successful login\");\n  }\n\n  logout() {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.reload(false);\n  }\n\n  isUserLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"user\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isBusinessLoggedIn() {\n    let role = sessionStorage.getItem(\"role\");\n    if (role !== \"business\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  getLoggedInUser() {\n    let username = sessionStorage.getItem(\"authenticatedUser\");\n    if (username == null) {\n      return \"\";\n    } else {\n      return username;\n    }\n  }\n\n  setUpToken(jwtToken) {\n    localStorage.setItem(\"token\", jwtToken);\n  }\n}\n\nexport default new AuthenticationService();\n"],"mappings":"AAAA,MAAMA,qBAAqB,CAAC;EAC1BC,+BAA+BA,CAACC,QAAQ,EAAE;IACxCC,cAAc,CAACC,OAAO,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;IACrDC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC;EAEAC,2BAA2BA,CAACL,QAAQ,EAAE;IACpCC,cAAc,CAACC,OAAO,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;IACrDC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;IACtCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC;EAEAE,MAAMA,CAAA,EAAG;IACPC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpBP,cAAc,CAACO,KAAK,CAAC,CAAC;IACtBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;EAC/B;EAEAC,cAAcA,CAAA,EAAG;IACf,IAAIC,IAAI,GAAGZ,cAAc,CAACa,OAAO,CAAC,MAAM,CAAC;IACzC,IAAID,IAAI,KAAK,MAAM,EAAE;MACnB,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEAE,kBAAkBA,CAAA,EAAG;IACnB,IAAIF,IAAI,GAAGZ,cAAc,CAACa,OAAO,CAAC,MAAM,CAAC;IACzC,IAAID,IAAI,KAAK,UAAU,EAAE;MACvB,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF;EAEAG,eAAeA,CAAA,EAAG;IAChB,IAAIhB,QAAQ,GAAGC,cAAc,CAACa,OAAO,CAAC,mBAAmB,CAAC;IAC1D,IAAId,QAAQ,IAAI,IAAI,EAAE;MACpB,OAAO,EAAE;IACX,CAAC,MAAM;MACL,OAAOA,QAAQ;IACjB;EACF;EAEAiB,UAAUA,CAACC,QAAQ,EAAE;IACnBX,YAAY,CAACL,OAAO,CAAC,OAAO,EAAEgB,QAAQ,CAAC;EACzC;AACF;AAEA,eAAe,IAAIpB,qBAAqB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}