{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport safelyParseJson from './safelyParseJson';\nimport isClient from './isClient';\nimport isAPISupported from './isAPISupported';\nimport isDevelopment from './isDevelopment';\n/**\n * An utility to quickly create hooks to access both Session Storage and Local Storage\n */\nconst createStorageHook = type => {\n  const storageName = `${type}Storage`;\n  if (isClient && !isAPISupported(storageName)) {\n    // eslint-disable-next-line no-console\n    console.warn(`${storageName} is not supported`);\n  }\n  /**\n   * the hook\n   */\n  return (storageKey, defaultValue) => {\n    if (!isClient) {\n      if (isDevelopment) {\n        // eslint-disable-next-line no-console\n        console.warn(`Please be aware that ${storageName} could not be available during SSR`);\n      }\n      return [JSON.stringify(defaultValue), () => undefined];\n    }\n    const storage = window[storageName];\n    const [value, setValue] = useState(safelyParseJson(storage.getItem(storageKey) || JSON.stringify(defaultValue)));\n    useEffect(() => {\n      storage.setItem(storageKey, JSON.stringify(value));\n    }, [storageKey, value]);\n    return [value, setValue];\n  };\n};\nexport default createStorageHook;","map":{"version":3,"names":["useEffect","useState","safelyParseJson","isClient","isAPISupported","isDevelopment","createStorageHook","type","storageName","console","warn","storageKey","defaultValue","JSON","stringify","undefined","storage","window","value","setValue","getItem","setItem"],"sources":["C:/Users/HAI/OneDrive/Documents/Hobby/Frontend/node_modules/beautiful-react-hooks/esm/shared/createStorageHook.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport safelyParseJson from './safelyParseJson';\nimport isClient from './isClient';\nimport isAPISupported from './isAPISupported';\nimport isDevelopment from './isDevelopment';\n/**\n * An utility to quickly create hooks to access both Session Storage and Local Storage\n */\nconst createStorageHook = (type) => {\n    const storageName = `${type}Storage`;\n    if (isClient && !isAPISupported(storageName)) {\n        // eslint-disable-next-line no-console\n        console.warn(`${storageName} is not supported`);\n    }\n    /**\n     * the hook\n     */\n    return (storageKey, defaultValue) => {\n        if (!isClient) {\n            if (isDevelopment) {\n                // eslint-disable-next-line no-console\n                console.warn(`Please be aware that ${storageName} could not be available during SSR`);\n            }\n            return [JSON.stringify(defaultValue), () => undefined];\n        }\n        const storage = window[storageName];\n        const [value, setValue] = useState(safelyParseJson(storage.getItem(storageKey) || JSON.stringify(defaultValue)));\n        useEffect(() => {\n            storage.setItem(storageKey, JSON.stringify(value));\n        }, [storageKey, value]);\n        return [value, setValue];\n    };\n};\nexport default createStorageHook;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C;AACA;AACA;AACA,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;EAChC,MAAMC,WAAW,GAAI,GAAED,IAAK,SAAQ;EACpC,IAAIJ,QAAQ,IAAI,CAACC,cAAc,CAACI,WAAW,CAAC,EAAE;IAC1C;IACAC,OAAO,CAACC,IAAI,CAAE,GAAEF,WAAY,mBAAkB,CAAC;EACnD;EACA;AACJ;AACA;EACI,OAAO,CAACG,UAAU,EAAEC,YAAY,KAAK;IACjC,IAAI,CAACT,QAAQ,EAAE;MACX,IAAIE,aAAa,EAAE;QACf;QACAI,OAAO,CAACC,IAAI,CAAE,wBAAuBF,WAAY,oCAAmC,CAAC;MACzF;MACA,OAAO,CAACK,IAAI,CAACC,SAAS,CAACF,YAAY,CAAC,EAAE,MAAMG,SAAS,CAAC;IAC1D;IACA,MAAMC,OAAO,GAAGC,MAAM,CAACT,WAAW,CAAC;IACnC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACC,eAAe,CAACc,OAAO,CAACI,OAAO,CAACT,UAAU,CAAC,IAAIE,IAAI,CAACC,SAAS,CAACF,YAAY,CAAC,CAAC,CAAC;IAChHZ,SAAS,CAAC,MAAM;MACZgB,OAAO,CAACK,OAAO,CAACV,UAAU,EAAEE,IAAI,CAACC,SAAS,CAACI,KAAK,CAAC,CAAC;IACtD,CAAC,EAAE,CAACP,UAAU,EAAEO,KAAK,CAAC,CAAC;IACvB,OAAO,CAACA,KAAK,EAAEC,QAAQ,CAAC;EAC5B,CAAC;AACL,CAAC;AACD,eAAeb,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}