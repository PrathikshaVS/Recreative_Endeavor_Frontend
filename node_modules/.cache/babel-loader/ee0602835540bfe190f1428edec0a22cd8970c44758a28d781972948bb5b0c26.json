{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\nimport useMouseEvents from './useMouseEvents';\nimport useTouchEvents from './useTouchEvents';\nimport { getDirection, getPointerCoordinates } from './shared/swipeUtils';\nconst defaultOptions = {\n  threshold: 15,\n  preventDefault: true\n};\n/**\n * Very similar to useSwipe but doesn't cause re-rendering during swipe\n */\nconst useSilentSwipeState = (targetRef = null, options = defaultOptions, onSwipeStart, onSwipeMove, onSwipeEnd) => {\n  const startingPointRef = useRef([-1, -1]);\n  const directionRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const alphaRef = useRef([]);\n  const opts = Object.assign(Object.assign({}, defaultOptions), options || {});\n  const {\n    onMouseDown,\n    onMouseMove,\n    onMouseLeave,\n    onMouseUp\n  } = useMouseEvents(targetRef);\n  const {\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onTouchCancel\n  } = useTouchEvents(targetRef);\n  const [state, setState] = useState();\n  const startSwipe = event => {\n    const [clientX, clientY] = getPointerCoordinates(event);\n    startingPointRef.current = [clientX, clientY];\n    directionRef.current = null;\n    if (onSwipeStart) {\n      onSwipeStart({\n        clientX,\n        clientY\n      });\n    }\n    if (opts.preventDefault) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n  const continueSwipe = event => {\n    const [clientX, clientY] = getPointerCoordinates(event);\n    if (opts.preventDefault) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    if (startingPointRef.current[0] !== -1 && startingPointRef.current[1] !== -1) {\n      const alpha = [startingPointRef.current[0] - clientX, startingPointRef.current[1] - clientY];\n      if (Math.abs(alpha[0]) > opts.threshold || Math.abs(alpha[1]) > opts.threshold) {\n        isDraggingRef.current = true;\n        directionRef.current = getDirection([clientX, clientY], startingPointRef.current, alpha);\n        alphaRef.current = alpha;\n        if (onSwipeMove) {\n          onSwipeMove({\n            clientX,\n            clientY,\n            direction: directionRef.current,\n            alphaX: alphaRef.current[0],\n            alphaY: alphaRef.current[1]\n          });\n        }\n      }\n    }\n  };\n  const endSwipe = event => {\n    if (isDraggingRef.current && directionRef.current) {\n      if (opts.preventDefault) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      setState({\n        direction: directionRef.current,\n        alphaX: alphaRef.current[0],\n        alphaY: alphaRef.current[1]\n      });\n      if (onSwipeEnd) {\n        onSwipeEnd({\n          direction: directionRef.current,\n          alphaX: alphaRef.current[0],\n          alphaY: alphaRef.current[1]\n        });\n      }\n    }\n    startingPointRef.current = [-1, -1];\n    isDraggingRef.current = false;\n    directionRef.current = null;\n  };\n  onMouseDown(startSwipe);\n  onTouchStart(startSwipe);\n  onMouseMove(continueSwipe);\n  onTouchMove(continueSwipe);\n  onMouseUp(endSwipe);\n  onTouchEnd(endSwipe);\n  onMouseLeave(endSwipe);\n  onTouchCancel(endSwipe);\n  return state;\n};\n/**\n * useSwipeEvents\n * @param targetRef\n * @param options\n */\nconst useSwipeEvents = (targetRef = null, options = defaultOptions) => {\n  const opts = Object.assign(Object.assign({}, defaultOptions), options || {});\n  const [onSwipeLeft, setOnSwipeLeft] = useHandlerSetterRef();\n  const [onSwipeRight, setOnSwipeRight] = useHandlerSetterRef();\n  const [onSwipeUp, setOnSwipeUp] = useHandlerSetterRef();\n  const [onSwipeDown, setOnSwipeDown] = useHandlerSetterRef();\n  const [onSwipeStart, setOnSwipeStart] = useHandlerSetterRef();\n  const [onSwipeMove, setOnSwipeMove] = useHandlerSetterRef();\n  const [onSwipeEnd, setOnSwipeEnd] = useHandlerSetterRef();\n  const state = useSilentSwipeState(targetRef, opts, onSwipeStart.current, onSwipeMove.current, onSwipeEnd.current);\n  const fnMap = {\n    right: onSwipeRight,\n    left: onSwipeLeft,\n    up: onSwipeUp,\n    down: onSwipeDown\n  };\n  useEffect(() => {\n    if (state && state.direction) {\n      const cb = fnMap[state.direction].current;\n      if (cb && typeof cb === 'function') {\n        cb(state);\n      }\n    }\n  }, [state]);\n  return Object.freeze({\n    onSwipeLeft: setOnSwipeLeft,\n    onSwipeRight: setOnSwipeRight,\n    onSwipeUp: setOnSwipeUp,\n    onSwipeDown: setOnSwipeDown,\n    onSwipeMove: setOnSwipeMove,\n    onSwipeStart: setOnSwipeStart,\n    onSwipeEnd: setOnSwipeEnd\n  });\n};\nexport default useSwipeEvents;","map":{"version":3,"names":["useEffect","useRef","useState","useHandlerSetterRef","useMouseEvents","useTouchEvents","getDirection","getPointerCoordinates","defaultOptions","threshold","preventDefault","useSilentSwipeState","targetRef","options","onSwipeStart","onSwipeMove","onSwipeEnd","startingPointRef","directionRef","isDraggingRef","alphaRef","opts","Object","assign","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","state","setState","startSwipe","event","clientX","clientY","current","stopPropagation","continueSwipe","alpha","Math","abs","direction","alphaX","alphaY","endSwipe","useSwipeEvents","onSwipeLeft","setOnSwipeLeft","onSwipeRight","setOnSwipeRight","onSwipeUp","setOnSwipeUp","onSwipeDown","setOnSwipeDown","setOnSwipeStart","setOnSwipeMove","setOnSwipeEnd","fnMap","right","left","up","down","cb","freeze"],"sources":["C:/Users/HAI/OneDrive/Documents/Frontend/node_modules/beautiful-react-hooks/esm/useSwipeEvents.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\nimport useMouseEvents from './useMouseEvents';\nimport useTouchEvents from './useTouchEvents';\nimport { getDirection, getPointerCoordinates } from './shared/swipeUtils';\nconst defaultOptions = {\n    threshold: 15,\n    preventDefault: true,\n};\n/**\n * Very similar to useSwipe but doesn't cause re-rendering during swipe\n */\nconst useSilentSwipeState = (targetRef = null, options = defaultOptions, onSwipeStart, onSwipeMove, onSwipeEnd) => {\n    const startingPointRef = useRef([-1, -1]);\n    const directionRef = useRef(null);\n    const isDraggingRef = useRef(false);\n    const alphaRef = useRef([]);\n    const opts = Object.assign(Object.assign({}, defaultOptions), (options || {}));\n    const { onMouseDown, onMouseMove, onMouseLeave, onMouseUp } = useMouseEvents(targetRef);\n    const { onTouchStart, onTouchMove, onTouchEnd, onTouchCancel } = useTouchEvents(targetRef);\n    const [state, setState] = useState();\n    const startSwipe = (event) => {\n        const [clientX, clientY] = getPointerCoordinates(event);\n        startingPointRef.current = [clientX, clientY];\n        directionRef.current = null;\n        if (onSwipeStart) {\n            onSwipeStart({ clientX, clientY });\n        }\n        if (opts.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    const continueSwipe = (event) => {\n        const [clientX, clientY] = getPointerCoordinates(event);\n        if (opts.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (startingPointRef.current[0] !== -1 && startingPointRef.current[1] !== -1) {\n            const alpha = [startingPointRef.current[0] - clientX, startingPointRef.current[1] - clientY];\n            if (Math.abs(alpha[0]) > opts.threshold || Math.abs(alpha[1]) > opts.threshold) {\n                isDraggingRef.current = true;\n                directionRef.current = getDirection([clientX, clientY], startingPointRef.current, alpha);\n                alphaRef.current = alpha;\n                if (onSwipeMove) {\n                    onSwipeMove({\n                        clientX,\n                        clientY,\n                        direction: directionRef.current,\n                        alphaX: alphaRef.current[0],\n                        alphaY: alphaRef.current[1],\n                    });\n                }\n            }\n        }\n    };\n    const endSwipe = (event) => {\n        if (isDraggingRef.current && directionRef.current) {\n            if (opts.preventDefault) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            setState({\n                direction: directionRef.current,\n                alphaX: alphaRef.current[0],\n                alphaY: alphaRef.current[1],\n            });\n            if (onSwipeEnd) {\n                onSwipeEnd({\n                    direction: directionRef.current,\n                    alphaX: alphaRef.current[0],\n                    alphaY: alphaRef.current[1],\n                });\n            }\n        }\n        startingPointRef.current = [-1, -1];\n        isDraggingRef.current = false;\n        directionRef.current = null;\n    };\n    onMouseDown(startSwipe);\n    onTouchStart(startSwipe);\n    onMouseMove(continueSwipe);\n    onTouchMove(continueSwipe);\n    onMouseUp(endSwipe);\n    onTouchEnd(endSwipe);\n    onMouseLeave(endSwipe);\n    onTouchCancel(endSwipe);\n    return state;\n};\n/**\n * useSwipeEvents\n * @param targetRef\n * @param options\n */\nconst useSwipeEvents = (targetRef = null, options = defaultOptions) => {\n    const opts = Object.assign(Object.assign({}, defaultOptions), (options || {}));\n    const [onSwipeLeft, setOnSwipeLeft] = useHandlerSetterRef();\n    const [onSwipeRight, setOnSwipeRight] = useHandlerSetterRef();\n    const [onSwipeUp, setOnSwipeUp] = useHandlerSetterRef();\n    const [onSwipeDown, setOnSwipeDown] = useHandlerSetterRef();\n    const [onSwipeStart, setOnSwipeStart] = useHandlerSetterRef();\n    const [onSwipeMove, setOnSwipeMove] = useHandlerSetterRef();\n    const [onSwipeEnd, setOnSwipeEnd] = useHandlerSetterRef();\n    const state = useSilentSwipeState(targetRef, opts, onSwipeStart.current, onSwipeMove.current, onSwipeEnd.current);\n    const fnMap = {\n        right: onSwipeRight,\n        left: onSwipeLeft,\n        up: onSwipeUp,\n        down: onSwipeDown,\n    };\n    useEffect(() => {\n        if (state && state.direction) {\n            const cb = fnMap[state.direction].current;\n            if (cb && typeof cb === 'function') {\n                cb(state);\n            }\n        }\n    }, [state]);\n    return Object.freeze({\n        onSwipeLeft: setOnSwipeLeft,\n        onSwipeRight: setOnSwipeRight,\n        onSwipeUp: setOnSwipeUp,\n        onSwipeDown: setOnSwipeDown,\n        onSwipeMove: setOnSwipeMove,\n        onSwipeStart: setOnSwipeStart,\n        onSwipeEnd: setOnSwipeEnd,\n    });\n};\nexport default useSwipeEvents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}