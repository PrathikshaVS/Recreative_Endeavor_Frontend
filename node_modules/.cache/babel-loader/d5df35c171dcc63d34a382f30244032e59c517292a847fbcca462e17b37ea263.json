{"ast":null,"code":"/**\n * Takes a mouse or a touch events and returns clientX and clientY values\n * @param event\n * @return {[undefined, undefined]}\n */\nexport const getPointerCoordinates = event => {\n  if (event.touches) {\n    const {\n      clientX,\n      clientY\n    } = event.touches[0];\n    return [clientX, clientY];\n  }\n  const {\n    clientX,\n    clientY\n  } = event;\n  return [clientX, clientY];\n};\nexport const getHorizontalDirection = alpha => alpha < 0 ? 'right' : 'left';\nexport const getVerticalDirection = alpha => alpha < 0 ? 'down' : 'up';\nexport const getDirection = (currentPoint, startingPoint, alpha) => {\n  const alphaX = startingPoint[0] - currentPoint[0];\n  const alphaY = startingPoint[1] - currentPoint[1];\n  if (Math.abs(alphaX) > Math.abs(alphaY)) {\n    return getHorizontalDirection(alpha[0]);\n  }\n  return getVerticalDirection(alpha[1]);\n};","map":{"version":3,"names":["getPointerCoordinates","event","touches","clientX","clientY","getHorizontalDirection","alpha","getVerticalDirection","getDirection","currentPoint","startingPoint","alphaX","alphaY","Math","abs"],"sources":["C:/Users/HAI/OneDrive/Documents/Frontend/node_modules/beautiful-react-hooks/esm/shared/swipeUtils.js"],"sourcesContent":["/**\n * Takes a mouse or a touch events and returns clientX and clientY values\n * @param event\n * @return {[undefined, undefined]}\n */\nexport const getPointerCoordinates = (event) => {\n    if (event.touches) {\n        const { clientX, clientY } = event.touches[0];\n        return [clientX, clientY];\n    }\n    const { clientX, clientY } = event;\n    return [clientX, clientY];\n};\nexport const getHorizontalDirection = (alpha) => (alpha < 0 ? 'right' : 'left');\nexport const getVerticalDirection = (alpha) => (alpha < 0 ? 'down' : 'up');\nexport const getDirection = (currentPoint, startingPoint, alpha) => {\n    const alphaX = startingPoint[0] - currentPoint[0];\n    const alphaY = startingPoint[1] - currentPoint[1];\n    if (Math.abs(alphaX) > Math.abs(alphaY)) {\n        return getHorizontalDirection(alpha[0]);\n    }\n    return getVerticalDirection(alpha[1]);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,qBAAqB,GAAIC,KAAK,IAAK;EAC5C,IAAIA,KAAK,CAACC,OAAO,EAAE;IACf,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGH,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;IAC7C,OAAO,CAACC,OAAO,EAAEC,OAAO,CAAC;EAC7B;EACA,MAAM;IAAED,OAAO;IAAEC;EAAQ,CAAC,GAAGH,KAAK;EAClC,OAAO,CAACE,OAAO,EAAEC,OAAO,CAAC;AAC7B,CAAC;AACD,OAAO,MAAMC,sBAAsB,GAAIC,KAAK,IAAMA,KAAK,GAAG,CAAC,GAAG,OAAO,GAAG,MAAO;AAC/E,OAAO,MAAMC,oBAAoB,GAAID,KAAK,IAAMA,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,IAAK;AAC1E,OAAO,MAAME,YAAY,GAAGA,CAACC,YAAY,EAAEC,aAAa,EAAEJ,KAAK,KAAK;EAChE,MAAMK,MAAM,GAAGD,aAAa,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC;EACjD,MAAMG,MAAM,GAAGF,aAAa,CAAC,CAAC,CAAC,GAAGD,YAAY,CAAC,CAAC,CAAC;EACjD,IAAII,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,EAAE;IACrC,OAAOP,sBAAsB,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,OAAOC,oBAAoB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}