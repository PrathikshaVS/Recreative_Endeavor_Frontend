{"ast":null,"code":"import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a callback to be performed when the component will unmount.\n */\nconst useWillUnmount = callback => {\n  const [handler, setHandler] = useHandlerSetterRef(callback);\n  useEffect(() => () => {\n    if (handler) {\n      handler.current();\n    }\n  }, []);\n  return setHandler;\n};\nexport default useWillUnmount;","map":{"version":3,"names":["useEffect","useHandlerSetterRef","useWillUnmount","callback","handler","setHandler","current"],"sources":["C:/Users/HAI/OneDrive/Documents/Frontend/node_modules/beautiful-react-hooks/esm/useWillUnmount.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\n/**\n * Returns a callback setter for a callback to be performed when the component will unmount.\n */\nconst useWillUnmount = (callback) => {\n    const [handler, setHandler] = useHandlerSetterRef(callback);\n    useEffect(() => () => {\n        if (handler) {\n            handler.current();\n        }\n    }, []);\n    return setHandler;\n};\nexport default useWillUnmount;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D;AACA;AACA;AACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,mBAAmB,CAACE,QAAQ,CAAC;EAC3DH,SAAS,CAAC,MAAM,MAAM;IAClB,IAAII,OAAO,EAAE;MACTA,OAAO,CAACE,OAAO,CAAC,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAOD,UAAU;AACrB,CAAC;AACD,eAAeH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}