{"ast":null,"code":"import { useLayoutEffect, useState } from 'react';\nimport isClient from './shared/isClient';\nimport isApiSupported from './shared/isAPISupported';\nimport isDevelopment from './shared/isDevelopment';\nconst defaultOptions = {\n  rootMargin: '0px',\n  threshold: 0\n};\nconst errorMessage = 'IntersectionObserver is not supported, this could happen both because' + ' window.IntersectionObserver is not supported by' + ' your current browser or you\\'re using the useViewportSpy hook whilst server side rendering.' + ' This message is displayed only in development mode';\n/**\n * Uses the IntersectionObserverMock API to tell whether the given DOM Element (from useRef) is visible within the\n * viewport.\n */\nconst useViewportSpy = (elementRef, options = defaultOptions) => {\n  if (!isClient || !isApiSupported('IntersectionObserver')) {\n    if (isDevelopment) {\n      // eslint-disable-next-line no-console\n      console.warn(errorMessage);\n    }\n    return null;\n  }\n  const [isVisible, setIsVisible] = useState();\n  useLayoutEffect(() => {\n    const observer = new window.IntersectionObserver(entries => entries.forEach(item => {\n      const nextValue = item.isIntersecting;\n      setIsVisible(nextValue);\n    }), options);\n    observer.observe(elementRef.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, [elementRef]);\n  return isVisible;\n};\nexport default useViewportSpy;","map":{"version":3,"names":["useLayoutEffect","useState","isClient","isApiSupported","isDevelopment","defaultOptions","rootMargin","threshold","errorMessage","useViewportSpy","elementRef","options","console","warn","isVisible","setIsVisible","observer","window","IntersectionObserver","entries","forEach","item","nextValue","isIntersecting","observe","current","disconnect"],"sources":["C:/Users/HAI/OneDrive/Documents/Frontend/node_modules/beautiful-react-hooks/esm/useViewportSpy.js"],"sourcesContent":["import { useLayoutEffect, useState } from 'react';\nimport isClient from './shared/isClient';\nimport isApiSupported from './shared/isAPISupported';\nimport isDevelopment from './shared/isDevelopment';\nconst defaultOptions = {\n    rootMargin: '0px',\n    threshold: 0,\n};\nconst errorMessage = 'IntersectionObserver is not supported, this could happen both because'\n    + ' window.IntersectionObserver is not supported by'\n    + ' your current browser or you\\'re using the useViewportSpy hook whilst server side rendering.'\n    + ' This message is displayed only in development mode';\n/**\n * Uses the IntersectionObserverMock API to tell whether the given DOM Element (from useRef) is visible within the\n * viewport.\n */\nconst useViewportSpy = (elementRef, options = defaultOptions) => {\n    if (!isClient || !isApiSupported('IntersectionObserver')) {\n        if (isDevelopment) {\n            // eslint-disable-next-line no-console\n            console.warn(errorMessage);\n        }\n        return null;\n    }\n    const [isVisible, setIsVisible] = useState();\n    useLayoutEffect(() => {\n        const observer = new window.IntersectionObserver((entries) => entries.forEach((item) => {\n            const nextValue = item.isIntersecting;\n            setIsVisible(nextValue);\n        }), options);\n        observer.observe(elementRef.current);\n        return () => {\n            observer.disconnect();\n        };\n    }, [elementRef]);\n    return isVisible;\n};\nexport default useViewportSpy;\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,MAAMC,cAAc,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;AACf,CAAC;AACD,MAAMC,YAAY,GAAG,uEAAuE,GACtF,kDAAkD,GAClD,8FAA8F,GAC9F,qDAAqD;AAC3D;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGA,CAACC,UAAU,EAAEC,OAAO,GAAGN,cAAc,KAAK;EAC7D,IAAI,CAACH,QAAQ,IAAI,CAACC,cAAc,CAAC,sBAAsB,CAAC,EAAE;IACtD,IAAIC,aAAa,EAAE;MACf;MACAQ,OAAO,CAACC,IAAI,CAACL,YAAY,CAAC;IAC9B;IACA,OAAO,IAAI;EACf;EACA,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAC5CD,eAAe,CAAC,MAAM;IAClB,MAAMgB,QAAQ,GAAG,IAAIC,MAAM,CAACC,oBAAoB,CAAEC,OAAO,IAAKA,OAAO,CAACC,OAAO,CAAEC,IAAI,IAAK;MACpF,MAAMC,SAAS,GAAGD,IAAI,CAACE,cAAc;MACrCR,YAAY,CAACO,SAAS,CAAC;IAC3B,CAAC,CAAC,EAAEX,OAAO,CAAC;IACZK,QAAQ,CAACQ,OAAO,CAACd,UAAU,CAACe,OAAO,CAAC;IACpC,OAAO,MAAM;MACTT,QAAQ,CAACU,UAAU,CAAC,CAAC;IACzB,CAAC;EACL,CAAC,EAAE,CAAChB,UAAU,CAAC,CAAC;EAChB,OAAOI,SAAS;AACpB,CAAC;AACD,eAAeL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}