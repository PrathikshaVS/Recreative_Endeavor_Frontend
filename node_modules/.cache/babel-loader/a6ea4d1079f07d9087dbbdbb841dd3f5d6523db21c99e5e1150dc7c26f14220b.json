{"ast":null,"code":"import { useEffect } from 'react';\nimport safeHasOwnProperty from './shared/safeHasOwnProperty';\nimport createCbSetterErrorProxy from './shared/createCbSetterErrorProxy';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\nconst assignDragEventOnMount = (targetRef, handlerRef, eventName) => {\n  useEffect(() => {\n    const cb = dragEvent => {\n      if (handlerRef && handlerRef.current) {\n        handlerRef.current(dragEvent);\n      }\n    };\n    if (targetRef.current) {\n      targetRef.current.addEventListener(eventName, cb);\n    }\n    return () => {\n      if (targetRef.current) {\n        targetRef.current.removeEventListener(eventName, cb);\n      }\n    };\n  }, []);\n};\n/**\n * Returns an object of callback setters to handle the drag-related events.\n * It accepts a DOM ref representing the events target (where attach the events to).\n *\n * Returned callback setters: `onDrag`, `onDrop`, `onDragEnter`, `onDragEnd`, `onDragExit`, `onDragLeave`,\n * `onDragOver`, `onDragStart`;\n */\nconst useDragEvents = (targetRef, setDraggable = true) => {\n  const [onDrag, setOnDrag] = useHandlerSetterRef();\n  const [onDrop, setOnDrop] = useHandlerSetterRef();\n  const [onDragEnter, setOnDragEnter] = useHandlerSetterRef();\n  const [onDragEnd, setOnDragEnd] = useHandlerSetterRef();\n  const [onDragExit, setOnDragExit] = useHandlerSetterRef();\n  const [onDragLeave, setOnDragLeave] = useHandlerSetterRef();\n  const [onDragOver, setOnDragOver] = useHandlerSetterRef();\n  const [onDragStart, setOnDragStart] = useHandlerSetterRef();\n  if (targetRef !== null && !safeHasOwnProperty(targetRef, 'current')) {\n    return createCbSetterErrorProxy('Unable to assign any drag event to the given ref');\n  }\n  useEffect(() => {\n    if (setDraggable && targetRef.current && !targetRef.current.hasAttribute('draggable')) {\n      targetRef.current.setAttribute('draggable', String(true));\n    }\n  }, []);\n  assignDragEventOnMount(targetRef, onDrag, 'drag');\n  assignDragEventOnMount(targetRef, onDrop, 'drop');\n  assignDragEventOnMount(targetRef, onDragEnter, 'dragenter');\n  assignDragEventOnMount(targetRef, onDragEnd, 'dragend');\n  assignDragEventOnMount(targetRef, onDragExit, 'dragexit');\n  assignDragEventOnMount(targetRef, onDragLeave, 'dragleave');\n  assignDragEventOnMount(targetRef, onDragOver, 'dragover');\n  assignDragEventOnMount(targetRef, onDragStart, 'dragstart');\n  return Object.freeze({\n    onDrag: setOnDrag,\n    onDrop: setOnDrop,\n    onDragEnter: setOnDragEnter,\n    onDragEnd: setOnDragEnd,\n    onDragExit: setOnDragExit,\n    onDragLeave: setOnDragLeave,\n    onDragOver: setOnDragOver,\n    onDragStart: setOnDragStart\n  });\n};\nexport default useDragEvents;","map":{"version":3,"names":["useEffect","safeHasOwnProperty","createCbSetterErrorProxy","useHandlerSetterRef","assignDragEventOnMount","targetRef","handlerRef","eventName","cb","dragEvent","current","addEventListener","removeEventListener","useDragEvents","setDraggable","onDrag","setOnDrag","onDrop","setOnDrop","onDragEnter","setOnDragEnter","onDragEnd","setOnDragEnd","onDragExit","setOnDragExit","onDragLeave","setOnDragLeave","onDragOver","setOnDragOver","onDragStart","setOnDragStart","hasAttribute","setAttribute","String","Object","freeze"],"sources":["C:/Users/HAI/OneDrive/Documents/Hobby/Frontend/node_modules/beautiful-react-hooks/esm/useDragEvents.js"],"sourcesContent":["import { useEffect } from 'react';\nimport safeHasOwnProperty from './shared/safeHasOwnProperty';\nimport createCbSetterErrorProxy from './shared/createCbSetterErrorProxy';\nimport useHandlerSetterRef from './shared/useHandlerSetterRef';\nconst assignDragEventOnMount = (targetRef, handlerRef, eventName) => {\n    useEffect(() => {\n        const cb = (dragEvent) => {\n            if (handlerRef && handlerRef.current) {\n                handlerRef.current(dragEvent);\n            }\n        };\n        if (targetRef.current) {\n            targetRef.current.addEventListener(eventName, cb);\n        }\n        return () => {\n            if (targetRef.current) {\n                targetRef.current.removeEventListener(eventName, cb);\n            }\n        };\n    }, []);\n};\n/**\n * Returns an object of callback setters to handle the drag-related events.\n * It accepts a DOM ref representing the events target (where attach the events to).\n *\n * Returned callback setters: `onDrag`, `onDrop`, `onDragEnter`, `onDragEnd`, `onDragExit`, `onDragLeave`,\n * `onDragOver`, `onDragStart`;\n */\nconst useDragEvents = (targetRef, setDraggable = true) => {\n    const [onDrag, setOnDrag] = useHandlerSetterRef();\n    const [onDrop, setOnDrop] = useHandlerSetterRef();\n    const [onDragEnter, setOnDragEnter] = useHandlerSetterRef();\n    const [onDragEnd, setOnDragEnd] = useHandlerSetterRef();\n    const [onDragExit, setOnDragExit] = useHandlerSetterRef();\n    const [onDragLeave, setOnDragLeave] = useHandlerSetterRef();\n    const [onDragOver, setOnDragOver] = useHandlerSetterRef();\n    const [onDragStart, setOnDragStart] = useHandlerSetterRef();\n    if (targetRef !== null && !safeHasOwnProperty(targetRef, 'current')) {\n        return createCbSetterErrorProxy('Unable to assign any drag event to the given ref');\n    }\n    useEffect(() => {\n        if (setDraggable && targetRef.current && !targetRef.current.hasAttribute('draggable')) {\n            targetRef.current.setAttribute('draggable', String(true));\n        }\n    }, []);\n    assignDragEventOnMount(targetRef, onDrag, 'drag');\n    assignDragEventOnMount(targetRef, onDrop, 'drop');\n    assignDragEventOnMount(targetRef, onDragEnter, 'dragenter');\n    assignDragEventOnMount(targetRef, onDragEnd, 'dragend');\n    assignDragEventOnMount(targetRef, onDragExit, 'dragexit');\n    assignDragEventOnMount(targetRef, onDragLeave, 'dragleave');\n    assignDragEventOnMount(targetRef, onDragOver, 'dragover');\n    assignDragEventOnMount(targetRef, onDragStart, 'dragstart');\n    return Object.freeze({\n        onDrag: setOnDrag,\n        onDrop: setOnDrop,\n        onDragEnter: setOnDragEnter,\n        onDragEnd: setOnDragEnd,\n        onDragExit: setOnDragExit,\n        onDragLeave: setOnDragLeave,\n        onDragOver: setOnDragOver,\n        onDragStart: setOnDragStart,\n    });\n};\nexport default useDragEvents;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}