{"ast":null,"code":"import { useCallback, useEffect, useMemo } from 'react';\nconst defaultOptions = {\n  rate: 0,\n  pitch: 0,\n  volume: 1\n};\n/**\n * Enables the possibility to perform a text-to-speech (with different voices) operation in your\n * React component by using the Web_Speech_API\n */\nconst useSpeechSynthesis = (text, options = defaultOptions) => {\n  const utter = useMemo(() => new SpeechSynthesisUtterance(text), [text]);\n  const voiceOptions = Object.assign(Object.assign({}, defaultOptions), options);\n  utter.voice = voiceOptions.voice;\n  useEffect(() => {\n    utter.pitch = voiceOptions.pitch;\n  }, [voiceOptions.pitch]);\n  useEffect(() => {\n    utter.rate = voiceOptions.rate;\n  }, [voiceOptions.rate]);\n  useEffect(() => {\n    utter.volume = voiceOptions.volume;\n  }, [voiceOptions.volume]);\n  const speak = useCallback(() => speechSynthesis.speak(utter), [text, voiceOptions.pitch, voiceOptions.rate, voiceOptions.voice, voiceOptions.volume]);\n  return {\n    speak,\n    speechSynthUtterance: utter\n  };\n};\nexport default useSpeechSynthesis;","map":{"version":3,"names":["useCallback","useEffect","useMemo","defaultOptions","rate","pitch","volume","useSpeechSynthesis","text","options","utter","SpeechSynthesisUtterance","voiceOptions","Object","assign","voice","speak","speechSynthesis","speechSynthUtterance"],"sources":["C:/Users/HAI/OneDrive/Documents/Hobby/Frontend/node_modules/beautiful-react-hooks/esm/useSpeechSynthesis.js"],"sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nconst defaultOptions = { rate: 0, pitch: 0, volume: 1 };\n/**\n * Enables the possibility to perform a text-to-speech (with different voices) operation in your\n * React component by using the Web_Speech_API\n */\nconst useSpeechSynthesis = (text, options = defaultOptions) => {\n    const utter = useMemo(() => new SpeechSynthesisUtterance(text), [text]);\n    const voiceOptions = Object.assign(Object.assign({}, defaultOptions), options);\n    utter.voice = voiceOptions.voice;\n    useEffect(() => {\n        utter.pitch = voiceOptions.pitch;\n    }, [voiceOptions.pitch]);\n    useEffect(() => {\n        utter.rate = voiceOptions.rate;\n    }, [voiceOptions.rate]);\n    useEffect(() => {\n        utter.volume = voiceOptions.volume;\n    }, [voiceOptions.volume]);\n    const speak = useCallback(() => speechSynthesis.speak(utter), [text, voiceOptions.pitch, voiceOptions.rate, voiceOptions.voice, voiceOptions.volume]);\n    return {\n        speak,\n        speechSynthUtterance: utter,\n    };\n};\nexport default useSpeechSynthesis;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACvD,MAAMC,cAAc,GAAG;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE,CAAC;EAAEC,MAAM,EAAE;AAAE,CAAC;AACvD;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAGN,cAAc,KAAK;EAC3D,MAAMO,KAAK,GAAGR,OAAO,CAAC,MAAM,IAAIS,wBAAwB,CAACH,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACvE,MAAMI,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,cAAc,CAAC,EAAEM,OAAO,CAAC;EAC9EC,KAAK,CAACK,KAAK,GAAGH,YAAY,CAACG,KAAK;EAChCd,SAAS,CAAC,MAAM;IACZS,KAAK,CAACL,KAAK,GAAGO,YAAY,CAACP,KAAK;EACpC,CAAC,EAAE,CAACO,YAAY,CAACP,KAAK,CAAC,CAAC;EACxBJ,SAAS,CAAC,MAAM;IACZS,KAAK,CAACN,IAAI,GAAGQ,YAAY,CAACR,IAAI;EAClC,CAAC,EAAE,CAACQ,YAAY,CAACR,IAAI,CAAC,CAAC;EACvBH,SAAS,CAAC,MAAM;IACZS,KAAK,CAACJ,MAAM,GAAGM,YAAY,CAACN,MAAM;EACtC,CAAC,EAAE,CAACM,YAAY,CAACN,MAAM,CAAC,CAAC;EACzB,MAAMU,KAAK,GAAGhB,WAAW,CAAC,MAAMiB,eAAe,CAACD,KAAK,CAACN,KAAK,CAAC,EAAE,CAACF,IAAI,EAAEI,YAAY,CAACP,KAAK,EAAEO,YAAY,CAACR,IAAI,EAAEQ,YAAY,CAACG,KAAK,EAAEH,YAAY,CAACN,MAAM,CAAC,CAAC;EACrJ,OAAO;IACHU,KAAK;IACLE,oBAAoB,EAAER;EAC1B,CAAC;AACL,CAAC;AACD,eAAeH,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}